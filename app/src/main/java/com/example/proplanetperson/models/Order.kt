package com.example.proplanetperson.models

import com.google.firebase.database.Exclude
import com.google.firebase.database.IgnoreExtraProperties

// data class for a user's order
@IgnoreExtraProperties // Useful for Firebase to ignore properties not matching database fields
data class Order(
    var orderId: String = "",         // Unique identifier for the order (e.g., generated by Firebase push key)
    val userId: String = "",          // ID of the user who placed the order
    val orderDate: Long = 0L,         // Timestamp when the order was placed (in milliseconds)
    val totalAmount: Double = 0.0,    // Total amount of the order (sum of all item prices * quantities)
    val status: String = "pending",   // Current status of the order (e.g., "pending", "processing", "shipped", "delivered", "cancelled")
    val items: List<CartItem> = emptyList(), // List of CartItem objects included in this order
    val shippingAddress: String = "", // Detailed shipping address (can be a separate Address data class if complex)
    val paymentMethod: String = "",   // e.g., "Credit Card", "UPI", "Cash on Delivery"
    val deliveryNotes: String? = null // Optional: Any special delivery instructions
) {
    // No-argument constructor required for Firebase deserialization
    constructor() : this("", "", 0L, 0.0, "pending", emptyList(), "", "", null)

    // Optional: A method to calculate total amount, if not directly stored or to verify
    @Exclude // Exclude from Firebase database saving if you want to calculate it dynamically
    fun calculateTotalAmount(): Double {
        return items.sumOf { it.price * it.quantity }
    }
}